const {i18n} = require('../index').env

function normalized_locale_from (req) {
  const header = original_locale_from (req); if (!header) return i18n.default_language
  const locale = header .match (/^[^,; ]*/)[0] .replace (/-/g,'_')
  return SPECIAL[locale] //> keeps language and region for those in i18n.preserved_locales
  || locale.match(/[A-Za-z]+/)?.[0].toLowerCase() //> keeps language only
  || i18n.default_language
}

function original_locale_from (req) {
  return !req ? undefined :
    req.query['sap-locale'] || SAP_LANGUAGES[req.query['sap-language']] ||
    req.headers['x-sap-request-language'] ||
    req.headers['accept-language']
}

const SAP_LANGUAGES = {
  '1Q': 'en_US_x_saptrc',
  '2Q': 'en_US_x_sappsd',
  '3Q': 'en_US_x_saprigi'
}

const SPECIAL = {
  ...Object.fromEntries (i18n.preserved_locales.map(l=>[l.toUpperCase(),l])), // REVISIT: why uppercase?
  ...Object.fromEntries (i18n.preserved_locales.map(l=>[l,l])),
  en_US_x_saptrc: 'en_US_saptrc',
  en_US_x_sappsd: 'en_US_sappsd',
  en_US_x_saprigi: 'en_US_saprigi',
}

module.exports = Object.assign (normalized_locale_from, {
  from: normalized_locale_from,
  raw: original_locale_from
})
