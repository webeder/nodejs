"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.verifyJwt = verifyJwt;
const xssec_1 = require("@sap/xssec");
const util_1 = require("@sap-cloud-sdk/util");
const environment_accessor_1 = require("../environment-accessor");
/**
 * Verifies the given JWT and returns the decoded payload.
 * @param jwt - JWT to be verified
 * @param options - Options to control certain aspects of JWT verification behavior.
 * @returns A Promise to the decoded and verified JWT.
 * @internal
 */
async function verifyJwt(jwt, options) {
    const disableCache = !{ ...defaultVerifyJwtOptions, ...options }
        .cacheVerificationKeys;
    const xsuaaService = (0, environment_accessor_1.getXsuaaService)({ disableCache, jwt });
    const { token } = await (0, xssec_1.createSecurityContext)(xsuaaService, {
        jwt
    }).catch(e => {
        throw new util_1.ErrorWithCause('Failed to verify JWT.', e);
    });
    return token.payload;
}
const defaultVerifyJwtOptions = {
    cacheVerificationKeys: true
};
//# sourceMappingURL=verify.js.map