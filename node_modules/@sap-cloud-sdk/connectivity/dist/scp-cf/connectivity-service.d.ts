import type { JwtPayload } from './jsonwebtoken-type';
import type { Protocol } from './protocol';
import type { ProxyConfiguration } from './connectivity-service-types';
import type { Destination, SubscriberToken } from './destination';
/**
 * @internal
 * @param destination - Destination which is extended
 * @param subscriberToken - The user and service token
 * @returns Destination containing the proxy config
 */
export declare function addProxyConfigurationOnPrem(destination: Destination, subscriberToken?: Required<SubscriberToken>): Promise<Destination>;
interface HostAndPort {
    host: string;
    port: number;
    protocol: Protocol;
}
/**
 * @internal
 * @returns Proxy host and port
 */
export declare function httpProxyHostAndPort(): HostAndPort;
/**
 * @internal
 * @param userJwt - The user JWT
 * @returns Socks Proxy Configuration
 */
export declare function socksProxyHostAndPort(userJwt?: JwtPayload): Promise<ProxyConfiguration>;
export {};
